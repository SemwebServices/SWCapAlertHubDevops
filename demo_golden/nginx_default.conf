##
# You should look at the following URL's in order to grasp a solid understanding
# of Nginx configuration files in order to fully unleash the power of Nginx.
# https://www.nginx.com/resources/wiki/start/
# https://www.nginx.com/resources/wiki/start/topics/tutorials/config_pitfalls/
# https://wiki.debian.org/Nginx/DirectoryStructure
#
# In most cases, administrators will remove this file from sites-enabled/ and
# leave it as reference inside of sites-available where it will continue to be
# updated by the nginx packaging team.
#
# This file will automatically load configuration files provided by other
# applications, such as Drupal or Wordpress. These applications will be made
# available underneath a path with that package name, such as /drupal8.
#
# Please see /usr/share/doc/nginx-doc/examples/ for more detailed examples.
##

proxy_cache_path /tmp/NGINX_cache/ keys_zone=backcache:10m;

map $http_upgrade $connection_upgrade {
    default upgrade;
    ''      close;
}

upstream tomcat {
    # Use IP Hash for session persistence
    ip_hash;

    # List of Tomcat application servers
    server 127.0.0.1:8080;
}

upstream webstomp {
    ip_hash;
    server 127.0.0.1:15674;
}

upstream es {
    ip_hash;
    server 127.0.0.1:9200;
}



# Default server configuration
#
server {
	listen 80 default_server;
	listen [::]:80 default_server;

	# SSL configuration
	#
	# listen 443 ssl default_server;
	# listen [::]:443 ssl default_server;
	#
	# Note: You should disable gzip for SSL traffic.
	# See: https://bugs.debian.org/773332
	#
	# Read up on ssl_ciphers to ensure a secure configuration.
	# See: https://bugs.debian.org/765782
	#
	# Self signed certs generated by the ssl-cert package
	# Don't use them in a production server!
	#
	# include snippets/snakeoil.conf;

	root /var/www/html;

	# Add index.php to the list if you are using PHP
	index index.html index.htm index.nginx-debian.html;

	server_name _;

        location = /robots.txt {
          add_header  Content-Type  text/plain;
          return 200 "User-agent: *\nDisallow: /\n";
        }

        location /CAPAggregator {
            proxy_pass http://tomcat/CAPAggregator
            proxy_cache backcache;
        }

        location /CAPCollator {
            return 302 /CAPAggregator/;
        }

        location /feedFacade {
            proxy_pass http://tomcat/feedFacade;
            proxy_cache backcache;
        }

        # Return a temporary redirect to the /tomcat-app/ directory
        # when user requests '/'
        location = / {
           return 302 /CAPAggregator/;
        }

        # WebSocket configuration
        location /wstunnel/ {
            proxy_pass https://tomcat;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
        }

        # Webstomp
        location /rabbitws/ {
          proxy_pass https://webstomp;
        }

        location /es/ {
            proxy_pass http://es/CAPCollator;
            proxy_cache backcache;
            rewrite ^/es/(.*)$ /$1 break;
        }

        location /cap {
               autoindex on;
        }

	# pass PHP scripts to FastCGI server
	#
	#location ~ \.php$ {
	#	include snippets/fastcgi-php.conf;
	#
	#	# With php-fpm (or other unix sockets):
	#	fastcgi_pass unix:/var/run/php/php7.0-fpm.sock;
	#	# With php-cgi (or other tcp sockets):
	#	fastcgi_pass 127.0.0.1:9000;
	#}

	# deny access to .htaccess files, if Apache's document root
	# concurs with nginx's one
	#
	#location ~ /\.ht {
	#	deny all;
	#}
}


# Virtual Host configuration for example.com
#
# You can move that to a different file under sites-available/ and symlink that
# to sites-enabled/ to enable it.
#
#server {
#	listen 80;
#	listen [::]:80;
#
#	server_name example.com;
#
#	root /var/www/example.com;
#	index index.html;
#
#	location / {
#		try_files $uri $uri/ =404;
#	}
#}

