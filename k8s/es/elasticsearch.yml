kind: Service
apiVersion: v1
metadata:
  name: elasticsearch
spec:
  clusterIP: None  # We need a headless service to allow the pods to discover each
  ports:           # other during autodiscover phase for cluster creation.
   - name: es1
     protocol: TCP # under the same service.
     port: 9200
     targetPort: 9200
   - name: es2
     protocol: TCP # under the same service.
     port: 9300
     targetPort: 9300
  selector:
    app: elasticsearch
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: elasticsearch
spec:
  selector:
    matchLabels:
      app: elasticsearch
  serviceName: elasticsearch
  replicas: 1
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: elasticsearch
    spec:
      terminationGracePeriodSeconds: 10
      containers:
      - name: elasticsearch
        image: docker.elastic.co/elasticsearch/elasticsearch:7.4.0
        imagePullPolicy: Always
        ports:
          - name: es1
            protocol: TCP
            containerPort: 9200
          - name: es2
            protocol: TCP
            containerPort: 9300
        env:
          - name: "ES_JAVA_OPTS"
            value: "-Xms512m -Xmx2g -Dfile.encoding=UTF-8"
          - name: discovery.type
            value: single-node
          - name: cluster.name
            value: elasticsearch
          - name: JAVA_TOOL_OPTIONS
            value: Dfile.encoding=UTF8
          - name: LC_ALL
            value: en_US.UTF-8
          - name: LANG
            value: en_US.UTF-8
          - name: LANGUAGE
            value: en_US.UTF-8
        volumeMounts:
          - name: elasticsearch-persistent-storage
            mountPath: //usr/share/elasticsearch/data
  volumeClaimTemplates:
  - metadata:
      name: elasticsearch-persistent-storage
      annotations:
        volume.beta.kubernetes.io/storage-class: standard
    spec:
      accessModes: ["ReadWriteOnce"]
      resources:
        requests:
          storage: 1Gi

